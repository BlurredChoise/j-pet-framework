pipeline {
    agent any

    stages {
        stage('BuildMatrix') {
            matrix {
                axes {
                    axis {
                        name 'ROOT'
                        values 'root-6.20.08', 'root-latest'
                    }
                }
                stages {
                  stage('Build container') {
                    agent {
                        dockerfile {
                            filename 'Dockerfile'
                            dir "jenkins/${env.ROOT}"
                            args "-v /var/run/docker.sock:/var/run/docker.sock"
                        }
                    }
                    stages {
                      stage('Build') {
                          steps {
                            sh label: 'Build j-pet-framework', script: "mkdir -p build && cd build && cmake .. && make all"
                          }
                      }

                      stage('Test') {
                          steps {
                              sh label: 'Build j-pet-framework tests', script: "cd build && make tests"
                              sh label: 'Run j-pet-framework tests', script: "cd build && source bin/thisframework.sh && ctest -C Debug -T test --output-on-failure"
                              sh label: 'mkdir', script: 'mkdir -p CPPCheckRaport'
                              sh label: 'cppcheck', script: 'cppcheck --inline-suppr --enable=all --inconclusive --xml --suppress="*:${WORKSPACE}/build/*.*" --xml-version=2 ${WORKSPACE} 2> CPPCheckRaport/cppcheck.xml'
                          }
                      }
                      stage('Deploy') {
                          steps {
                              echo 'Deploying....'
                          }
                      }
                    }
                  }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
